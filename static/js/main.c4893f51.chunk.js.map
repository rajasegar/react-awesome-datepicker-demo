{"version":3,"sources":["DayPicker.js","MonthPicker.js","YearPicker.js","DatePicker.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Caption","p","_templateObject2","DayButton","button","_templateObject3","props","currentDate","DatePicker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pickDate","bind","assertThisInitialized","e","onDatePicked","target","textContent","_this2","days","Date","getDate","i","push","react_default","a","createElement","map","d","key","onClick","Component","locales","es","require","fr","MonthPicker_templateObject","MonthPicker_templateObject2","MonthButton","MonthPicker_templateObject3","currentMonth","Transition","transition","attrs","unmountOnExit","timeout","_templateObject4","pickMonth","state","show","setTimeout","setState","onMonthPicked","dataset","month","_this3","months","monthWith30days","date","today","in","MonthPicker_Caption","MonthPicker_Wrapper","m","index","hidden","includes","data-month","getMonth","format","getFullYear","indexOf","locale","YearPicker_templateObject","YearPicker_templateObject2","YearButton","YearPicker_templateObject3","currentYear","Pointer","YearPicker_templateObject4","_templateObject5","pickYear","wrapper","React","createRef","current","scrollTop","onYearPicked","maxYear","years","YearPicker_Transition","YearPicker_Caption","title","YearPicker_Wrapper","innerRef","y","DatePicker_templateObject","TriggerInput","input","DatePicker_templateObject2","TriggerWrapper","DatePicker_templateObject3","Dropdown","DatePicker_templateObject4","showDayPicker","showMonthPicker","showYearPicker","showDropdown","formattedDate","dateInput","monthInput","yearInput","renderDayPicker","renderMonthPicker","renderYearPicker","onDateChange","resetDate","showToday","_date","_month","_year","year","concat","select","toString","padStart","_this$state","_this$state2","_this$state3","_value","value","_value$split","split","_value$split2","slicedToArray","showMonth","showYear","lastIndexOf","length","_this$state4","DatePicker_Wrapper","onFocus","onChange","DayPicker","MonthPicker","YearPicker","App","className","src_DatePicker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4893f51.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  max-height: 217px;\n  margin: 0 auto;\n`;\n\nconst Caption = styled.p`\n  color: #555;\n  font-size: 0.75em;\n`;\nconst DayButton = styled.button`\n  background: none;\n  border: ${props => (props.currentDate ? \"1px solid black\" : \"none\")};\n  cursor: pointer;\n  padding: 4px;\n  text-align: center;\n  width: 32px;\n  border-radius: 4px;\n  height: 32px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickDate = this.pickDate.bind(this);\n  }\n\n  pickDate(e) {\n    this.props.onDatePicked(e.target.textContent);\n  }\n\n  render() {\n    const days = [];\n    const currentDate = new Date().getDate();\n    for (let i = 0; i < 31; i++) days.push(i + 1);\n    return (\n      <div>\n        <Caption>Select a day</Caption>\n        <Wrapper>\n          {days.map(d => (\n            <DayButton\n              key={d}\n              onClick={this.pickDate}\n              currentDate={d === currentDate}\n            >\n              {d}\n            </DayButton>\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\nimport { format } from \"date-fns\";\n\nconst locales = {\n  es: require(\"date-fns/locale/es\"),\n  fr: require(\"date-fns/locale/fr\")\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  min-height: 167px;\n  max-height: 167px;\n  margin: 25px auto;\n`;\n\nconst Caption = styled.p`\n  color: #555;\n  font-size: 0.75em;\n`;\nconst MonthButton = styled.button`\n  background: none;\n  border: ${props => (props.currentMonth ? \"1px solid black\" : \"none\")};\n  cursor: pointer;\n  padding: 8px;\n  text-align: center;\n  border-radius: 4px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    user-select: none;\n  }\n`;\n\nconst Transition = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 1000\n})`\n&:enter { \n  transform: translateX(300px);\n  }\n&:enter-active {\n  transform: translateX(0px);\n  transition: transform 400ms ease-in-out;\n}\n&:exit { \n  transform: translateX(0px);\n  }\n&:exit-active {\n  transform: translateX(300px);\n  transition: transoform 400ms ease-in;\n}\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickMonth = this.pickMonth.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ show: true });\n    });\n  }\n\n  pickMonth(e) {\n    this.props.onMonthPicked(e.target.dataset.month);\n  }\n\n  render() {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    const monthWith30days = [\n      \"February\",\n      \"April\",\n      \"June\",\n      \"September\",\n      \"November\"\n    ];\n\n    const { date } = this.props;\n    const { show } = this.state;\n    const today = new Date();\n    return (\n      <Transition in={show}>\n        <Caption>Select month</Caption>\n        <Wrapper>\n          {months.map((m, index) => (\n            <MonthButton\n              key={m}\n              onClick={this.pickMonth}\n              hidden={\n                (date > 30 && monthWith30days.includes(m)) ||\n                (date === \"30\" && m === \"February\")\n              }\n              data-month={index + 1}\n              currentMonth={index === today.getMonth()}\n            >\n              {format(\n                new Date(today.getFullYear(), months.indexOf(m), date),\n                \"MMMM\",\n                {\n                  locale: locales[\"en\"]\n                }\n              )}\n            </MonthButton>\n          ))}\n        </Wrapper>\n      </Transition>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  max-height: 175px;\n  overflow-y: scroll;\n  margin: 0 auto;\n`;\n\nconst Caption = styled.p`\n  color: #555;\n  font-size: 0.75em;\n  margin-bottom: 0;\n`;\n\nconst YearButton = styled.button`\n  background: none;\n  border: ${props => (props.currentYear ? \"1px solid black\" : \"none\")};\n  cursor: pointer;\n  padding: 4px;\n  text-align: center;\n  border-radius: 4px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n`;\n\nconst Pointer = styled.button`\n  margin: 0 auto;\n  cursor: pointer;\n  border: none;\n  background: none;\n`;\n\nconst Transition = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 1000\n})`\n&:enter { \n  transform: translateX(300px);\n  }\n&:enter-active {\n  transform: translateX(0px);\n  transition: transform 400ms ease-in-out;\n}\n\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickYear = this.pickYear.bind(this);\n    this.state = {\n      show: false\n    };\n\n    this.wrapper = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ show: true });\n      // need to revisit this\n      this.wrapper.current.scrollTop = 188;\n    });\n  }\n\n  pickYear(e) {\n    this.setState({ show: false });\n    this.props.onYearPicked(e.target.textContent);\n  }\n\n  render() {\n    let today = new Date();\n    let currentYear = today.getFullYear();\n    let minYear = currentYear - 50;\n    let maxYear = currentYear + 50;\n    const years = [];\n    for (let i = minYear; i < maxYear; i++) years.push(i);\n    const { show } = this.state;\n    return (\n      <Transition in={show}>\n        <Caption>Select year</Caption>\n        <Pointer\n          title=\"Scroll Up to choose previous years\"\n          onClick={() => (this.wrapper.current.scrollTop -= 21)}\n        >\n          ▲\n        </Pointer>\n        <Wrapper innerRef={this.wrapper}>\n          {years.map(y => (\n            <YearButton\n              onClick={this.pickYear}\n              key={y}\n              currentYear={y === currentYear}\n            >\n              {y}\n            </YearButton>\n          ))}\n        </Wrapper>\n        <Pointer\n          title=\"Scroll down to choose next years\"\n          onClick={() => (this.wrapper.current.scrollTop += 21)}\n        >\n          ▼\n        </Pointer>\n      </Transition>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport DayPicker from \"./DayPicker\";\nimport MonthPicker from \"./MonthPicker\";\nimport YearPicker from \"./YearPicker\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n//import { format } from \"date-fns\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst Wrapper = styled.div`\n  background: white;\n  max-width: 300px;\n  margin: 1em auto;\n  max-height: 300px;\n  overflow: hidden;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n`;\n\nconst TriggerInput = styled.input`\n  border: none;\n  font-weight: bold;\n  font-size: 1em;\n  cursor: pointer;\n  color: #555;\n  width: 100%;\n  background: none;\n  text-align: center;\n`;\n\nconst TriggerWrapper = styled.div`\n  padding: 10px;\n`;\n\nconst Dropdown = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 100\n})`\n  border-top: 1px solid #ccc;\n  min-height: 271px;\n  &:enter { opacity: 0.01;}\n  &:enter-active {\n  opacity: 1;\n    transition: opacity 200ms ease-in-out;\n  }\n  &:exit { opacity: 1; }\n  &:exit-active {\n    opacity: 0.01;\n    transition: opacity 1ms ease-in;\n  }\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDayPicker: false,\n      showMonthPicker: false,\n      showYearPicker: false,\n      showDropdown: false,\n      formattedDate: \"DD/MM/YYYY\"\n    };\n\n    this.dateInput = React.createRef();\n    this.monthInput = React.createRef();\n    this.yearInput = React.createRef();\n\n    this.renderDayPicker = this.renderDayPicker.bind(this);\n    this.renderMonthPicker = this.renderMonthPicker.bind(this);\n    this.renderYearPicker = this.renderYearPicker.bind(this);\n    this.onDatePicked = this.onDatePicked.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n\n    this.resetDate = this.resetDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetDate();\n  }\n\n  resetDate() {\n    const { showToday } = this.props;\n    let today = new Date();\n    let _date = showToday ? today.getDate() : \"DD\";\n    let _month = showToday ? today.getMonth() + 1 : \"MM\";\n    let _year = showToday ? today.getFullYear() : \"YYYY\";\n\n    this.setState({\n      date: _date,\n      month: _month,\n      year: _year,\n      formattedDate: `${_date}/${_month}/${_year}`\n    });\n  }\n\n  renderDayPicker() {\n    this.setState({\n      showDayPicker: true,\n      showDropdown: true\n    });\n    //this.resetDate();\n    this.dateInput.current.select();\n  }\n\n  renderMonthPicker(d) {\n    const _date = d.toString().padStart(2, \"0\");\n    const { month, year } = this.state;\n\n    this.setState({\n      showDayPicker: false,\n      showMonthPicker: true,\n      date: _date,\n      formattedDate: `${_date}/${month}/${year}`\n    });\n  }\n\n  renderYearPicker(m) {\n    const _month = m.toString().padStart(2, \"0\");\n    const { date, year } = this.state;\n    this.setState({\n      showMonthPicker: false,\n      showYearPicker: true,\n      month: _month,\n      formattedDate: `${date}/${_month}/${year}`\n    });\n  }\n\n  onDatePicked(y) {\n    const { date, month } = this.state;\n    this.setState({\n      showDropdown: false,\n      showYearPicker: false,\n      year: y,\n      formattedDate: `${date}/${month}/${y}`\n    });\n\n    /*\n\n    const locales = {\n      en: require(\"date-fns/locale/en\"),\n      eo: require(\"date-fns/locale/eo\"),\n      ru: require(\"date-fns/locale/ru\"),\n      fr: require(\"date-fns/locale/fr\")\n    };\n\n    console.log(year, month, date);\n    window.__localeId__ = \"fr\";\n    console.log(\n      format(new Date(2018, month, date), \"DD MMMM, YYYY\", {\n        locale: locales[window.__localeId__]\n      })\n    );\n    */\n  }\n\n  onDateChange(e) {\n    const _value = e.target.value;\n\n    const [_date, _month, _year] = _value.split(\"/\");\n    //console.log(_date);\n    //console.log(_month);\n    //console.log(_year);\n\n    const showMonth = _value.indexOf(\"/\") >= 1;\n    const showYear = _value.lastIndexOf(\"/\") >= 3;\n    if (showMonth) {\n      this.renderMonthPicker(_date);\n    }\n    if (showYear) {\n      this.setState({\n        showMonthPicker: false,\n        showYearPicker: true,\n        month: _month\n      });\n    }\n\n    if (_year && _year.length === 4) {\n      this.setState({\n        showDropdown: false,\n        showYearPicker: false\n      });\n    }\n\n    this.setState({ formattedDate: _value });\n  }\n\n  render() {\n    const {\n      showDayPicker,\n      showMonthPicker,\n      showYearPicker,\n      showDropdown,\n      date,\n      formattedDate\n    } = this.state;\n    return (\n      <Wrapper>\n        <TriggerWrapper>\n          <TriggerInput\n            value={formattedDate}\n            onFocus={this.renderDayPicker}\n            onChange={this.onDateChange}\n            innerRef={this.dateInput}\n          />\n        </TriggerWrapper>\n        <Dropdown in={showDropdown}>\n          {showDayPicker && <DayPicker onDatePicked={this.renderMonthPicker} />}\n          {showMonthPicker && (\n            <MonthPicker date={date} onMonthPicked={this.renderYearPicker} />\n          )}\n          {showYearPicker && <YearPicker onYearPicked={this.onDatePicked} />}\n        </Dropdown>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DatePicker from \"./DatePicker\";\n\nclass App extends Component {\n  render() {\n    const showToday = false;\n    return (\n      <div className=\"App\">\n        <DatePicker showToday={showToday} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}