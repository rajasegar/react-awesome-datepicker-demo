{"version":3,"sources":["logo.svg","DayPicker.js","MonthPicker.js","YearPicker.js","DatePicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","Caption","_templateObject2","DayButton","button","_templateObject3","DatePicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pickDate","bind","assertThisInitialized","e","onDatePicked","target","textContent","_this2","days","i","push","react_default","a","createElement","map","d","key","onClick","Component","MonthPicker_templateObject","MonthPicker_templateObject2","MonthButton","MonthPicker_templateObject3","Transition","transition","attrs","unmountOnExit","timeout","_templateObject4","pickMonth","state","show","setTimeout","setState","onMonthPicked","_this3","monthWith30days","_this$props","date","in","MonthPicker_Caption","MonthPicker_Wrapper","m","disabled","includes","YearPicker_templateObject","YearPicker_templateObject2","YearButton","YearPicker_templateObject3","YearPicker_templateObject4","pickYear","onYearPicked","y","Date","getFullYear","maxYear","years","YearPicker_Transition","YearPicker_Caption","YearPicker_Wrapper","months","DatePicker_templateObject","Trigger","DatePicker_templateObject2","TriggerWrapper","DatePicker_templateObject3","StyledSpan","span","DatePicker_templateObject4","active","Dropdown","_templateObject5","showDayPicker","showMonthPicker","showYearPicker","showDropdown","month","year","renderDayPicker","renderMonthPicker","renderYearPicker","console","log","toString","padStart","indexOf","_this$state","DatePicker_Wrapper","DayPicker","MonthPicker","YearPicker","App","className","src_DatePicker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ff715e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  max-height: 217px;\n  margin: 0 auto;\n`;\n\nconst Caption = styled.p`\n  color: #ccc;\n  font-size: 0.75em;\n`;\nconst DayButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  text-align: center;\n  width: 32px;\n  border-radius: 4px;\n  height: 32px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickDate = this.pickDate.bind(this);\n  }\n\n  pickDate(e) {\n    this.props.onDatePicked(e.target.textContent);\n  }\n\n  render() {\n    const days = [];\n    for (let i = 0; i < 31; i++) days.push(i + 1);\n    const { onDatePicked } = this.props;\n    return (\n      <div>\n        <Caption>Select a day</Caption>\n        <Wrapper>\n          {days.map(d => (\n            <DayButton key={d} onClick={this.pickDate}>\n              {d}\n            </DayButton>\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  min-height: 167px;\n  max-height: 167px;\n  margin: 25px auto;\n`;\n\nconst Caption = styled.p`\n  color: #ccc;\n  font-size: 0.75em;\n`;\nconst MonthButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 8px;\n  text-align: center;\n  border-radius: 4px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    user-select: none;\n  }\n`;\n\nconst Transition = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 1000\n})`\n&:enter { \n  transform: translateX(300px);\n  }\n&:enter-active {\n  transform: translateX(0px);\n  transition: transform 400ms ease-in-out;\n}\n&:exit { \n  transform: translateX(0px);\n  }\n&:exit-active {\n  transform: translateX(300px);\n  transition: transoform 400ms ease-in;\n}\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickMonth = this.pickMonth.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ show: true });\n    });\n  }\n\n  pickMonth(e) {\n    this.props.onMonthPicked(e.target.textContent);\n  }\n\n  render() {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    const monthWith30days = [\n      \"February\",\n      \"April\",\n      \"June\",\n      \"September\",\n      \"November\"\n    ];\n\n    const { onMonthPicked, date } = this.props;\n    const { show } = this.state;\n    return (\n      <Transition in={show}>\n        <Caption>Select month</Caption>\n        <Wrapper>\n          {months.map(m => (\n            <MonthButton\n              key={m}\n              onClick={this.pickMonth}\n              disabled={\n                (date > 30 && monthWith30days.includes(m)) ||\n                (date === \"30\" && m === \"February\")\n              }\n            >\n              {m}\n            </MonthButton>\n          ))}\n        </Wrapper>\n      </Transition>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-column-gap: 5px;\n  grid-row-gap: 5px;\n  max-width: 250px;\n  max-height: 217px;\n  overflow-y: auto;\n  margin: 0 auto;\n`;\n\nconst Caption = styled.p`\n  color: #ccc;\n  font-size: 0.75em;\n`;\n\nconst YearButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  text-align: center;\n  border-radius: 4px;\n  margin: 0 auto;\n\n  &:focus,\n  &:active,\n  &:hover {\n    background: #ff7494;\n    color: white;\n  }\n`;\n\nconst Transition = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 1000\n})`\n&:enter { \n  transform: translateX(300px);\n  }\n&:enter-active {\n  transform: translateX(0px);\n  transition: transform 400ms ease-in-out;\n}\n\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.pickYear = this.pickYear.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ show: true });\n    });\n  }\n\n  pickYear(e) {\n    this.setState({ show: false });\n    this.props.onYearPicked(e.target.textContent);\n  }\n\n  render() {\n    let today = new Date();\n    let y = today.getFullYear();\n    let minYear = y - 50;\n    let maxYear = y + 50;\n    const years = [];\n    for (let i = minYear; i < maxYear; i++) years.push(i);\n    const { onYearPicked } = this.props;\n    const { show } = this.state;\n    return (\n      <Transition in={show}>\n        <Caption>Select year</Caption>\n        <Wrapper>\n          {years.map(y => (\n            <YearButton onClick={this.pickYear} key={y}>\n              {y}\n            </YearButton>\n          ))}\n        </Wrapper>\n      </Transition>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport DayPicker from \"./DayPicker\";\nimport MonthPicker from \"./MonthPicker\";\nimport YearPicker from \"./YearPicker\";\nimport styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst Wrapper = styled.div`\n  background: white;\n  max-width: 300px;\n  margin: 1em auto;\n  max-height: 300px;\n  overflow: hidden;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n`;\n\nconst Trigger = styled.button`\n  border: none;\n  font-weight: bold;\n  font-size: 1em;\n  cursor: pointer;\n  color: #ccc;\n  width: 100%;\n  background: none;\n`;\n\nconst TriggerWrapper = styled.div`\n  padding: 10px;\n`;\n\nconst StyledSpan = styled.span`\n  color: ${props => (props.active ? \"#ff7494\" : \"#ccc\")};\n`;\n\nconst Dropdown = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 100\n})`\n  border-top: 1px solid #ccc;\n  min-height: 271px;\n  &:enter { opacity: 0.01;}\n  &:enter-active {\n  opacity: 1;\n    transition: opacity 200ms ease-in-out;\n  }\n  &:exit { opacity: 1; }\n  &:exit-active {\n    opacity: 0.01;\n    transition: opacity 1ms ease-in;\n  }\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    //let today = new Date();\n    this.state = {\n      showDayPicker: false,\n      showMonthPicker: false,\n      showYearPicker: false,\n      showDropdown: false,\n      //date: today.getDate(),\n      //month: today.getMonth() + 1,\n      //year: today.getFullYear()\n      date: \"DD\",\n      month: \"MM\",\n      year: \"YYYY\"\n    };\n\n    this.renderDayPicker = this.renderDayPicker.bind(this);\n    this.renderMonthPicker = this.renderMonthPicker.bind(this);\n    this.renderYearPicker = this.renderYearPicker.bind(this);\n    this.onDatePicked = this.onDatePicked.bind(this);\n  }\n\n  renderDayPicker() {\n    this.setState({\n      showDayPicker: true,\n      showDropdown: true,\n      date: \"DD\"\n    });\n  }\n\n  renderMonthPicker(d) {\n    console.log(d);\n    this.setState({\n      showDayPicker: false,\n      showMonthPicker: true,\n      date: d.toString().padStart(2, \"0\"),\n      month: \"MM\"\n    });\n  }\n\n  renderYearPicker(m) {\n    console.log(m);\n    this.setState({\n      showMonthPicker: false,\n      showYearPicker: true,\n      month: (months.indexOf(m) + 1).toString().padStart(2, \"0\"),\n      year: \"YYYY\"\n    });\n  }\n\n  onDatePicked(y) {\n    console.log(y);\n    this.setState({\n      showDropdown: false,\n      showYearPicker: false,\n      year: y\n    });\n  }\n\n  render() {\n    const {\n      showDayPicker,\n      showMonthPicker,\n      showYearPicker,\n      showDropdown,\n      date,\n      month,\n      year\n    } = this.state;\n    return (\n      <Wrapper>\n        <TriggerWrapper>\n          <Trigger onClick={this.renderDayPicker}>\n            <StyledSpan active={showDayPicker}>{date}</StyledSpan> /&nbsp;\n            <StyledSpan active={showMonthPicker}>{month}</StyledSpan> /&nbsp;\n            <StyledSpan active={showYearPicker}>{year}</StyledSpan>\n          </Trigger>\n        </TriggerWrapper>\n        <Dropdown in={showDropdown}>\n          {showDayPicker && <DayPicker onDatePicked={this.renderMonthPicker} />}\n          {showMonthPicker && (\n            <MonthPicker date={date} onMonthPicked={this.renderYearPicker} />\n          )}\n          {showYearPicker && <YearPicker onYearPicked={this.onDatePicked} />}\n        </Dropdown>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DatePicker from \"./DatePicker\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <DatePicker />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}